1	МЕТА РОБОТИ

Метою лабораторної роботи є розробка програмного забезпечення для IoT пристрою та написання звіту, в якому будуть висвітлені інженерні рішення, враховуючи його інтеграцію в систему та взаємодію з нею. В процесі виконання лабораторної роботи будуть створені чотири діаграми для кращого розуміння розроблених рішень: UML-діаграма взаємодії, UML-діаграма компонентів, UML-діаграма прецедентів та UML-діаграма діяльності. Такий підхід дозволить належним чином відобразити структуру та функціональні можливості IoT пристрою, а також його взаємодію з іншими елементами системи.

2	КОНЦЕПТУАЛЬНЕ МОДЕЛЮВАННЯ ПРЕДМЕТНОЇ ОБЛАСТІ

Головним кроком є формування ключових сценаріїв використання програмної системи . Для досягнення цієї мети ідеально використовувати UML-діаграму прецедентів. Після ретельного аналізу функціоналу, який був визначений у документі "Vision & Scope", було розроблено UML-діаграму прецедентів (див.  рис. 1). У визначеній UML-діаграмі прецедентів присутні три актори: IoT, бізнес адміністратор, адміністратор. Кожен із цих акторів має доступ до раніше визначеного функціоналу. Зокрема, пристрій IoT може вимірювати температуру та координати, перевіряти статус відкриття. Адміністратор може фізично налаштовувати систему.
Бізнес-адміністратор має можливість налаштовувати параметри IoT системи, а саме змінювати одиницю вимірювання температури  з Цельсія на Фаренгейт, та навпаки  з Фаренгейта на Цельсій, також бізнес-адміністратор може змінювати затримку вимірювання температури і координат, переглядати цю затримку.
Тепер важливо визначити фізичні компоненти, що становлять частину Інтернету речей (ІоТ) системи. Для цього було створено діаграму компонентів з використанням мови моделювання UML (див. рис. 2). З діаграми видно, що для ІоТ частини системи використовується мікроконтролер Arduino Uno Rev 4 WiFi. За допомогою вбудованого WiFi-модуля можна здійснювати підключення до мережі та взаємодію з хмарними сервісами через бездротову мережу. Додатково до мікроконтролер було підключено датчик температури та GPS модуль, модуль магнетрон, який передаватиме визначені значення до головного мікроконтролера.
Після визначення акторів та компонентів Інтернету речей (ІоТ) частини системи, наступним етапом є розробка діаграми взаємодії (див. рис. Б.1 у додатку Б), яка відображає хід процесів у програмному забезпеченні. ІоТ частина системи складається з одного пристрою та його датчика температури, GPS модуля, магнітний сенсор. Датчики передають числові значення програмному забезпеченню. Після цього відбувається відправка HTTP-запиту до серверної частини з метою запису поточної температури, координат та статусу відкриття після цього відбувається HTTP-запит до серверної частини на перевірку поточного та записаного значення, якщо значення відкриття контейнера відрізняється, відбувається зміна статусу відкриття. 
Також в Інтернеті речей (ІоТ) частині системи передбачено сторінку налаштувань, на якій користувач може переглядати поточну затримку визначення температури, координат та статусу відкриття, змінювати затримку для даних датчиків та змінювати одиницю вимірювання значення температури та змінювати пароль для авторизації. Таким чином маємо більше гнучкості при використанні ІоТ. Для входу до сторінки налаштувань адміністратор повинен ввести логін та пароль, який за замовчуванням є "taras"  та "1111" відповідно. На основі концептуального моделювання предметної області було розроблено три діаграми, а також визначені основні сутності програмної системи. Зараз можна розпочати реалізацію інженерних рішень.

3	ІНЖЕНЕРНІ РІШЕННЯ
3.1 Технологічні рішення для ІоТ частини системи

Технології для написання ІоТ частини були вибрані враховуючи функціональні потреби системи. Рішення про використання мікроконтролера Arduino призвело до обмежень щодо мови програмування, оскільки програмне забезпечення для Arduino розробляється на спеціалізованому діалекті C/C++. Для полегшення розробки ІоТ частини було вирішено використовувати бібліотеку <WiFiS3.h>, яка дозволяє створювати застосунки та працювати з бездротовою мережею та бібліотеки <DHT.h>, <TineGPS.h>  які дозволили правильно опитувати датчик та отримувати вимірюванні значення.

3.2 Реалізація методу для зміни поточної температури, координат

Для переходу до конкретної реалізації було вирішено розпочати з методу, відповідального за основний функціонал ІоТ частини, а саме отримання температури, координат та зміну їх поточного значення. Основною метою цього методу є зміни поточної температури та координат для подальшого відстеження його на клієнтській частині. Цей метод викликається в циклічному методі loop, де він приймає значення у вигляді параметрів (див. рядок 32-36, розділ А.1 у додатку А), яке повернув безпосередньо датчик. Дана функція loop буде викликатись нескінченному циклі, поки не буде перервано електроживлення, або відбудуться подія, яка зупинить виконання даного методі. Після отримання результатів відбувається POST запит (див. рядок 63-88, розділ А.1 у додатку А), який записує значення.

3.3 Реалізація сторінки для відображення налаштувань IoT

Для забезпечення гнучкості конфігурації Інтернету ІоТ, була створена спеціальна сторінка налаштувань, яка дозволяє користувачам особисто адаптувати параметри системи під свої потреби, а саме затримка для зчитування значень з датчика температури та GPS модуля, даний функціонал є важливим, адже чим менше буде затримка, тим краще буде відбуватись процес відслідковування, але затримку треба регулювати під кожний тип задачі, даний метод можна викликаний кнопкою "Change Delay" на сторінці налаштувань. 
Зміна пароля для входу до сторінки налаштувань, а саме користувач може змінити пароль для підвищення безпеки системи (див. рядок 80-90, розділ А.2 у додатку А). Початковий логін "taras"  пароль "1111" шифрується (див. рядок 82, розділ А.2 у додатку А). Зміна паролю відбувається через локальний POST-запит, активований кнопкою "Change Password".
Зміна одиниці вимірювання температури, а саме користувач має можливість змінювати одиницю вимірювання температури  з Цельсія на Фаренгейт, та навпаки  з Фаренгейта на Цельсій (див. рядок 51-59, розділ А.2 у додатку А.
Крім налаштувань функціоналу, користувач може переглядати поточну затримку датчика. Сторінка налаштувань є важливим елементом Інтернету речей, забезпечуючи важливі можливості адаптації під конкретні умови використання.

4	ВИСНОВКИ

В результаті виконання лабораторної роботи, була успішно розроблено та протестована серверна частина програмної системи. Для кращого розуміння предметної області та архітектури системи були розроблені відповідні діаграми. Також була створена демонстраційна відеопрезентація, в якій висвітлені основні функції системи. Ви можете переглянути цей відеоролик за наступним посиланням: (DEMO: https://drive.google.com/drive/u/1/folders/16JU7TgXIcgPBleoqTB_m2lzZ4PIrInHQ)
